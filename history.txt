  517  exit
  518  clear
  519  cd git-projects/config-management-repo/
  520  git status
  521  git add README.md 
  522  git status
  523  git commit -m "First file in the repo"
  524  git status
  525  cd .git
  526  ls -al
  527  cd ..
  528  clear
  529  vim LICENSE.md
  530  git status
  531  git add .
  532  git commit
  533  git commit -m "Added a License file"
  534  git log
  535  git show
  536  clear
  537  git status
  538  vim README.md 
  539  git status
  540  git ls-files
  541  git -am "updated README file"
  542  git commit -am "updated README file"
  543  clear
  544  git status
  545  vim README.md 
  546  git status
  547  git add .
  548  git status
  549  git reset HEAD README.md
  550  git status
  551  git add .
  552  git status
  553  git restore --staged README.md
  554  git status
  555  git checkout -- README.md
  556  vim README.md 
  557  git status
  558  git restore README.md
  559  vim README.md 
  560  git status
  561  git config --global alias.hist "log --online --graph --decorate --all"
  562  git hist
  563  git config --global alias.hist "log --oneline --graph --decorate --all"
  564  git hist
  565  git status
  566  clear
  567  vim example.txt
  568  git ls-files
  569  clear
  570  git commit -am "Example text file"
  571  clear
  572  git add example.txt 
  573  git commit -m "Example text fiel"
  574  cd ..
  575  cd config-management-repo/
  576  git remote -v
  577  git remote add origin git@github.com:AshDummy/config-demo.git
  578  git remote -v
  579  git push -u origin master --tags
  580  git push -u origin master
  581  cd ..
  582  git init config-demo
  583  git add README.md
  584  git commit -m "first commit"
  585  git remote add origin https://github.com/AshDummy/config-demo.git
  586  git push -u origin master
  587  cd config-demo/
  588  clear
  589  echo "# config-demo" >> README.md
  590  git add README.md
  591  git commit -m "first commit"
  592  git remote add origin https://github.com/AshDummy/config-demo.git
  593  git push -u origin master
  594  cd ..
  595  mkdir .ssh
  596  cd .ssh
  597  ssh-keygen -t rsa -C "ash.dummy901@gmail.com"
  598  ls -al
  599  ssh -T git@github.com
  600  cd
  601  cd git-projects/config-management-repo/
  602  git push -u origin master
  603  clearf
  604  clear
  605  cp ../../config-management/policy-violation.yaml .
  606  git status
  607  git add .
  608  git commit -m "Policy violation"
  609  git push -u origin master
  610  clear
  611  gcloud container get-credentials mongo-crud-cluster
  612  gcloud container clusters get-credentials mongo-crud-cluster
  613  clear
  614  kubectl create ns config-management-system && kubectl create secret generic git-creds   --namespace=config-management-system   --from-file=ssh="[.ssh/id_rsa]"
  615  kubectl create secret generic git-creds   --from-file=ssh="[/path/to/KEYPAIR-PRIVATE-KEY-FILENAME]"
  616  kubectl create secret generic git-creds   --from-file=ssh="[.ssh/id_rsa]"
  617  kubectl create secret generic git-creds >   --from-file=ssh="[/data/ashir/.ssh/id_rsa]"
  618  kubectl create secret generic git-creds >   --from-file=ssh="[../../.ssh/id_rsa]"
  619  kubectl create secret generic git-creds >   --from-file=ssh="[.ssh/id_rsa]"
  620  kubectl create secret generic git-creds --from-file="[../../.ssh/id_rsa]"
  621  kubectl create secret generic git-creds --from-file="[data/ashir/.ssh/id_rsa]"
  622  kubectl create secret generic git-creds   --from-file=ssh="[id_rsa]"
  623  clear
  624  cp ../../.ssh/id_rsa ../../
  625  kubectl create secret generic git-creds   --from-file=ssh="[id_rsa]"
  626  kubectl create secret generic git-creds   --from-file=ssh="[/id_rsa]"
  627* kubectl create secret generic git-creds   --from-file=ssh="id_rsa]"
  628  kubectl create secret generic git-creds   --from-file=ssh="id_rsa"
  629  kubectl create secret generic git-creds   --from-file=ssh=id_rsa
  630  kubectl create secret generic git-creds   --from-file=ssh=/id_rsa
  631  kubectl create secret generic git-creds   --from-file=ssh=/data/ashir/id_rsa
  632  git remote add origin git@github.com:AshDummy/config-demo.gitkubectl create ns config-management-system && kubectl create secret generic git-creds   --namespace=config-management-system   --from-file=ssh=/data/ashir/id_rsa
  633  clear
  634  kubectl create ns config-management-system && kubectl create secret generic git-creds   --namespace=config-management-system   --from-file=ssh=/data/ashir/id_rsa
  635  kubectl create secret generic git-creds   --namespace=config-management-system   --from-file=ssh=/data/ashir/id_rsa
  636  history
  637  echo history >> history.txt
  638  cat history >> history.txt 
  639  history >> history.txt 
